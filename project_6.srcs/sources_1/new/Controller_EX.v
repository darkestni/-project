module Controller_EX_Logic ( 
    // from ID/EX pipeline register
    input        isLoad_from_idex,
    input        isStore_from_idex,
    // input        isEcall_from_idex,
    // input [1:0]  ecall_type_from_idex,
    input        regWrite_from_idex, // generated by Controller_ID

    input [21:0] alu_result_high_from_ex, // ALU计算出的地址高位

    // to EX/MEM pipeline register
    output reg   MemRead_to_mem,      
    output reg   MemWrite_to_mem,    
    output reg   IORead_to_mem,       
    output reg   IOWrite_to_mem,     
    output reg   RegWrite_to_wb,
    output reg   MemToReg_to_wb       // 写回数据来源 (0: ALU结果, 1: 内存/IO读出数据)
);

    localparam IO_ADDRESS_HIGH_MATCH = 22'h3FFFFF;

    // localparam ECALL_TYPE_NONE_EX     = 2'b00;
    // localparam ECALL_TYPE_READ_EX     = 2'b01;
    // localparam ECALL_TYPE_WRITE_EX    = 2'b10;

    always @(*) begin
        // default value
        MemRead_to_mem  = 1'b0;
        MemWrite_to_mem = 1'b0;
        IORead_to_mem   = 1'b0;
        IOWrite_to_mem  = 1'b0;
        RegWrite_to_wb = regWrite_from_idex; 
        MemToReg_to_wb  = 1'b0; 

        if (isLoad_from_idex) begin
            if (alu_result_high_from_ex == IO_ADDRESS_HIGH_MATCH) begin
                IORead_to_mem = 1'b1;
            end else begin
                MemRead_to_mem = 1'b1;
            end
            MemToReg_to_wb = 1'b1; 
        end

        if (isStore_from_idex) begin
            if (alu_result_high_from_ex == IO_ADDRESS_HIGH_MATCH) begin
                IOWrite_to_mem = 1'b1;
            end else begin
                MemWrite_to_mem = 1'b1;
            end
        end

        // if (isEcall_from_idex) begin
        //     if (ecall_type_from_idex == ECALL_TYPE_WRITE_EX) begin
        //         IOWrite_to_mem = 1'b1; // 例如，写LED
        //         // RegWrite_to_wb 通常为0，除非此ecall也写寄存器
        //     end else if (ecall_type_from_idex == ECALL_TYPE_READ_EX) begin
        //         // 如果此ecall是从某个I/O设备读取数据并写入寄存器
        //         // IORead_to_mem = 1'b1; // 可能需要一个特定的IORead信号
        //         MemToReg_to_wb = 1'b1; // 表示数据来自“外部”(I/O)
        //         // RegWrite_to_wb 已经由 regWrite_from_idex (Controller_ID) 设为1
        //     end
        // end
    end
endmodule